{"version":3,"sources":["../../src/hook.js","App.js","index.js"],"names":["socketUrl","token","retry","defaultRetry","retryInterval","useState","data","setData","send","setSend","setRetry","readyState","setReadyState","useEffect","params","ws","console","d","JSON","err","msg","formatMessage","event","message","timestamp","Date","setTimeout","App","messagesList","setMessagesList","txtRef","useRef","useWebSocket","concat","receiveTag","className","toLowerCase","name","rows","ref","type","onClick","current","value","sendTag","style","height","overflowY","map","Tag","i","key","Home","marginBottom","href","ReactDOM","render","document","getElementById"],"mappings":"oyBAmBA,SAAsB,GAKnB,IAJDA,EAIC,EAJDA,UACAC,EAGC,EAHDA,MAGC,IAFDC,MAAOC,OAEN,MAFqB,EAErB,MADDC,qBACC,MADe,KACf,IAEuBC,qBAAjBC,EAFN,KAEYC,EAFZ,OAIuBF,oBAAS,kBAAM,gBAAhCG,EAJN,KAIYC,EAJZ,OAMyBJ,mBANzB,GAMMH,EANN,KAMaQ,EANb,OAQmCL,oBARnC,GAQMM,EARN,KAQkBC,EARlB,KAwDD,OA9CAC,qBAAU,WACR,IAAMC,EAAS,CAAf,GACA,GACEA,UAEF,IAAMC,EAAK,EAAH,UAAR,GAoCA,OAlCAA,SAAY,WACVC,mCACAJ,MAGAH,GAAQ,WACN,OAAO,YACL,IACE,IAAMQ,EAAIC,eAAV,GAEA,OADAH,WACA,EACA,MAAOI,GACP,cAMNJ,YAAe,YACb,IAAMK,EAxDd,SAAuBd,GACrB,IAEE,OADeY,WAAf,GAEA,MAAOC,GACP,UAmDgBE,CAAcC,EAA1B,MACAf,EAAQ,CAAEgB,QAAF,EAAgBC,WA9CvB,IAAIC,MAAX,cAkDEV,UAAa,WACXH,MAEIV,EAAJ,GACEwB,YAAW,WACThB,GAAS,mBAAWR,EAAX,OADXwB,IAMG,WACLX,aAED,CA5CHF,IA8CO,CAAEL,KAAF,EAAQF,KAAR,EAAcK,eCbRgB,MA1Df,WAAgB,IAAD,EAC2BtB,mBAAS,CAC/C,mEAFW,mBACNuB,EADM,KACQC,EADR,KAIPC,EAASC,mBAEThB,EAAKiB,EAAa,CACtBhC,UAbc,6BAgBhBa,qBAAU,WACR,GAAIE,EAAGT,KAAM,CAAC,IACJiB,EAAYR,EAAGT,KAAfiB,QACRM,GAAgB,SAACD,GAAD,MACd,GAAGK,OAhBQ,SAACV,GAAD,OAAa,yCAAiBA,GAgB/BW,CAAWX,GAAUK,SAGlC,CAACb,EAAGT,OAEP,IAUMK,EAAaI,EAAGJ,WAAa,OAAS,SAE5C,OACE,6BACE,6BACE,4BACE,qEACA,iDACoB,IAClB,0BAAMwB,UAAW,cAAgBxB,EAAWyB,eACzCzB,KAIP,8BACE,2DACA,8BAAU0B,KAAK,UAAUC,KAAM,EAAGC,IAAKT,IACvC,2BAAOU,KAAK,SAASC,QA3BZ,WACf,IAAMlB,EAAUO,EAAOY,QAAQC,OAAS,GACpCpB,IACFM,GAAgB,SAACD,GAAD,MACd,GAAGK,OA1BK,SAACV,GAAD,OAAa,yCAAiBA,GA0B5BqB,CAAQrB,GAAUK,MAE9Bb,EAAGP,KAAKe,KAqBoCoB,MAAM,WAGlD,yBAAKE,MAAO,CAAEC,OAAQ,IAAKC,UAAW,WACnCnB,EAAaoB,KAAI,SAACC,EAAKC,GAAN,OAChB,yBAAKC,IAAKD,GAAID,SCrDxB,SAASG,IACP,OACE,6BACE,yBAAKjB,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,+CACb,wBAAIU,MAAO,CAAEQ,aAAc,WAA3B,kBACA,wFAGJ,yBAAKlB,UAAU,OACb,yBAAKA,UAAU,yCACb,kBAAC,EAAD,QAGJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,oBACb,uBAAGmB,KAAK,oDAAR,mCAWdC,IAASC,OAAO,kBAACJ,EAAD,MAAUK,SAASC,eAAe,W","file":"static/js/main.ceed4cb7.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\n// json parse a message\n// fallback to original message\nfunction formatMessage(data) {\n  try {\n    const parsed = JSON.parse(data);\n    return parsed;\n  } catch (err) {\n    return data;\n  }\n}\n\n// returns epoch time\nfunction getTimestamp() {\n  return new Date().getTime();\n}\n\n// websocket hook\nfunction useWebSocket({\n  socketUrl,\n  token,\n  retry: defaultRetry = 3,\n  retryInterval = 1500\n}) {\n  // message and timestamp\n  const [data, setData] = useState();\n  // send function\n  const [send, setSend] = useState(() => () => undefined);\n  // state of our connection\n  const [retry, setRetry] = useState(defaultRetry);\n  // retry counter\n  const [readyState, setReadyState] = useState(false);\n\n  useEffect(() => {\n    const params = [socketUrl];\n    if (token) {\n      params.push(token);\n    }\n    const ws = new WebSocket(...params);\n\n    ws.onopen = () => {\n      console.log('Connected to socket');\n      setReadyState(true);\n\n      // fn to send messages\n      setSend(() => {\n        return (data) => {\n          try {\n            const d = JSON.stringify(data);\n            ws.send(d);\n            return true;\n          } catch (err) {\n            return false;\n          }\n        };\n      });\n\n      // reveive messages\n      ws.onmessage = (event) => {\n        const msg = formatMessage(event.data);\n        setData({ message: msg, timestamp: getTimestamp() });\n      };\n    };\n\n    ws.onclose = () => {\n      setReadyState(false);\n      // retry logic\n      if (retry > 0) {\n        setTimeout(() => {\n          setRetry((retry) => retry - 1);\n        }, retryInterval);\n      }\n    };\n    // terminate connection on unmount\n    return () => {\n      ws.close();\n    };\n  }, [retry]);\n\n  return { send, data, readyState };\n}\n\nexport default useWebSocket;\n","import React, { useState, useEffect, useRef } from 'react';\nimport useWebSocket from 'use-web-socket';\n\nconst sockerUrl = 'wss://echo.websocket.org';\n//const sockerUrl = 'ws://localhost:3080/?type=ngo_notification';\n\nconst sendTag = (message) => <span>&#11014;: {message}</span>;\nconst receiveTag = (message) => <span>&#11015;: {message}</span>;\n\nfunction App() {\n  const [messagesList, setMessagesList] = useState([\n    <span>Messages will be displayed here</span>\n  ]);\n  const txtRef = useRef();\n\n  const ws = useWebSocket({\n    socketUrl: sockerUrl\n  });\n\n  useEffect(() => {\n    if (ws.data) {\n      const { message } = ws.data;\n      setMessagesList((messagesList) =>\n        [].concat(receiveTag(message), messagesList)\n      );\n    }\n  }, [ws.data]);\n\n  const sendData = () => {\n    const message = txtRef.current.value || '';\n    if (message) {\n      setMessagesList((messagesList) =>\n        [].concat(sendTag(message), messagesList)\n      );\n      ws.send(message);\n    }\n  };\n\n  const readyState = ws.readyState ? 'Open' : 'Closed';\n\n  return (\n    <div>\n      <div>\n        <h6>\n          <div>Socket Url: wss://echo.websocket.org</div>\n          <div>\n            Connection State:{' '}\n            <span className={'connection ' + readyState.toLowerCase()}>\n              {readyState}\n            </span>\n          </div>\n        </h6>\n        <form>\n          <label>Message (string or json)</label>\n          <textarea name='message' rows={4} ref={txtRef} />\n          <input type='button' onClick={sendData} value='Send' />\n        </form>\n      </div>\n      <div style={{ height: 300, overflowY: 'scroll' }}>\n        {messagesList.map((Tag, i) => (\n          <div key={i}>{Tag}</div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import './styles/milligram.css';\nimport './styles/index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nfunction Home() {\n  return (\n    <div>\n      <div className='container'>\n        <div className='row'>\n          <div className='column column-80 column-offset-10 ta-center'>\n            <h3 style={{ marginBottom: '0.5rem' }}>use-web-socket</h3>\n            <h5>A clean and minimal react hook around client WebSocket</h5>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='column column-80 column-offset-10 app'>\n            <App />\n          </div>\n        </div>\n        <div className='row'>\n          <div className='column column-100'>\n            <div className='footer ta-center'>\n              <a href='https://github.com/Kailash-Sankar/use-web-socket'>\n                Kailash Sankar, April 2020\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nReactDOM.render(<Home />, document.getElementById('root'));\n"],"sourceRoot":""}